"use strict";(self.webpackChunkonboarding_baania=self.webpackChunkonboarding_baania||[]).push([[8],{3905:function(e,n,r){r.d(n,{Zo:function(){return p},kt:function(){return m}});var t=r(7294);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function a(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function c(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?a(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function s(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var i=t.createContext({}),l=function(e){var n=t.useContext(i),r=n;return e&&(r="function"==typeof e?e(n):c(c({},n),e)),r},p=function(e){var n=l(e.components);return t.createElement(i.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=l(r),m=o,f=d["".concat(i,".").concat(m)]||d[m]||u[m]||a;return r?t.createElement(f,c(c({ref:n},p),{},{components:r})):t.createElement(f,c({ref:n},p))}));function m(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=r.length,c=new Array(a);c[0]=d;var s={};for(var i in n)hasOwnProperty.call(n,i)&&(s[i]=n[i]);s.originalType=e,s.mdxType="string"==typeof e?e:o,c[1]=s;for(var l=2;l<a;l++)c[l]=r[l];return t.createElement.apply(null,c)}return t.createElement.apply(null,r)}d.displayName="MDXCreateElement"},9400:function(e,n,r){r.r(n),r.d(n,{assets:function(){return p},contentTitle:function(){return i},default:function(){return m},frontMatter:function(){return s},metadata:function(){return l},toc:function(){return u}});var t=r(7462),o=r(3366),a=(r(7294),r(3905)),c=["components"],s={title:"Docker"},i=void 0,l={unversionedId:"docs/platform/docker",id:"docs/platform/docker",title:"Docker",description:"Usage",source:"@site/docs/docs/platform/docker.md",sourceDirName:"docs/platform",slug:"/docs/platform/docker",permalink:"/docs/platform/docker",draft:!1,editUrl:"https://github.com/baania/onboarding.baania.com/edit/master/docs/docs/platform/docker.md",tags:[],version:"current",frontMatter:{title:"Docker"},sidebar:"docs",previous:{title:"SOPs",permalink:"/docs/platform/sops"},next:{title:"Kubernetes",permalink:"/docs/platform/kubernetes"}},p={},u=[{value:"Usage",id:"usage",level:2},{value:"docker-compose",id:"docker-compose",level:2},{value:"network to host from docker on linux",id:"network-to-host-from-docker-on-linux",level:3},{value:"Useful snippets",id:"useful-snippets",level:2},{value:"Resources",id:"resources",level:2}],d={toc:u};function m(e){var n=e.components,r=(0,o.Z)(e,c);return(0,a.kt)("wrapper",(0,t.Z)({},d,r,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"# pull image and run stuff through it\ndocker pull IMAGE_NAME\ndocker run -v $(pwd):/outputs -it IMAGE_NAME /bin/bash /outputs/build.sh\n\n# ssh into image\ndocker run -it REPOSITORY\n\n# re-attach container\ndocker exec -it 3dbcd9237a43 /bin/bash\n\n# list images\ndocker images\n\n# list containers\ndocker ps\n\n# list all containers\ndocker ps -a\n\n# docker stop\ndocker stop CONTAINER_ID\n\n# remove image\ndocker rmi node IMAGE ID\n\n# transfer file\ndocker cp CONTAINER_ID:DOCKER_PATH_TO_ZIP_FILE LOCAL_PATH\n\n# forward port\ndocker run -it -p ON_HOST_PORT:IN_CONTAINER_PORT baania/pyspark\n\n# prune\ndocker system prune\n\n# create and attach volume\ndocker volume create --name hello\ndocker run -d -v hello:/container/path/for/volume container_image my_command\n")),(0,a.kt)("h2",{id:"docker-compose"},"docker-compose"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},'version: "3"\nservices:\n  jupyter:\n    image: jupyter/pyspark-notebook:latest\n    ports:\n      - "8888:8888"\n      - "4040:4040"\n    volumes:\n      - .:/home/jovyan\n    environment:\n      - JUPYTER_ENABLE_LAB=yes\n')),(0,a.kt)("h3",{id:"network-to-host-from-docker-on-linux"},"network to host from docker on linux"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},'   environment:\n      NC_DB: "pg://localhost:5432?u=postgres&p=password&d=root_db"\n    extra_hosts:\n      - "host.docker.internal:host-gateway"\n    network_mode: host\n')),(0,a.kt)("h2",{id:"useful-snippets"},"Useful snippets"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"# remove docker images based on name\ndocker rmi $(docker images | grep 'imagename')\n\n# use amd64 when you're on arm64\nexport DOCKER_DEFAULT_PLATFORM=linux/amd64\n")),(0,a.kt)("h2",{id:"resources"},"Resources"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://www.composerize.com"},"composerize")," - docker run asdlksjfksdf > docker-composerize up."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://contains.dev/"},"contains.dev")," - Explore your images, view their files, layers and dependencies."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/compose-spec/compose-spec/blob/master/spec.md"},"The Compose Specification")," - The Compose specification establishes a standard for the definition of multi-container platform-agnostic applications.")))}m.isMDXComponent=!0}}]);