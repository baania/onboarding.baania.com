"use strict";(self.webpackChunkonboarding_baania=self.webpackChunkonboarding_baania||[]).push([[728],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=c(n),m=a,f=d["".concat(s,".").concat(m)]||d[m]||p[m]||i;return n?r.createElement(f,o(o({ref:t},u),{},{components:n})):r.createElement(f,o({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8160:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return p}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),o=["components"],l={title:"Unix"},s=void 0,c={unversionedId:"docs/misc/unix",id:"docs/misc/unix",title:"Unix",description:"Archive",source:"@site/docs/docs/misc/unix.md",sourceDirName:"docs/misc",slug:"/docs/misc/unix",permalink:"/docs/misc/unix",draft:!1,editUrl:"https://github.com/baania/onboarding.baania.com/edit/master/docs/docs/misc/unix.md",tags:[],version:"current",frontMatter:{title:"Unix"},sidebar:"docs",previous:{title:"Terraform",permalink:"/docs/misc/terraform"}},u={},p=[{value:"Archive",id:"archive",level:2},{value:"Recipes",id:"recipes",level:3},{value:"bash",id:"bash",level:2},{value:"Mount &amp; Umount",id:"mount--umount",level:2},{value:"rsync",id:"rsync",level:2},{value:"SSH",id:"ssh",level:2},{value:"wget",id:"wget",level:2},{value:"System",id:"system",level:2}],d={toc:p};function m(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"archive"},"Archive"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Kind"),(0,i.kt)("th",{parentName:"tr",align:null},"Compression"),(0,i.kt)("th",{parentName:"tr",align:null},"Extraction"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"tar"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"-czvf ARCHIVE.tar.gz FILE_OR_FOLDER")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"-xzvf TAR_FILE -C OUT_PATH"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"gzip"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"FILE")),(0,i.kt)("td",{parentName:"tr",align:null})),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"zip"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"ARCHIVE.zip FILE")," or ",(0,i.kt)("inlineCode",{parentName:"td"},"-r ARCHIVE.zip PATTERN")),(0,i.kt)("td",{parentName:"tr",align:null})))),(0,i.kt)("h3",{id:"recipes"},"Recipes"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'# compress each file as gzip\nfor i in */*.jl; do echo "$i" && gzip "$i"; done\n\n## as zip\n$ for i in *.csv; do zip `basename $i .csv`.zip $i; done\n\n# compress each folder\nfor i in *; do zip -r `basename $i`.cbz $i; done\n')),(0,i.kt)("h2",{id:"bash"},"bash"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"# loop\nfor file in *.txt; do cat $file; done\n\n# if-else\nif [ $(whoami) = 'root' ]; then\n    echo \"You are root\"\nelse\n    echo \"You are not root\"\nfi\n\n# split file\nsplit -l 300 file.txt new\nsplit -b 500m httpd.log\n\n# replace string  in text file\nsed -i 's/old-text/new-text/g' input.txt\n\n## osx\nsed -i .bak 's/old-text/new-text/g' input.txt\n\n# send grep output to mv\ngrep -l 'Subject: \\[SPAM\\]' | xargs -I '{}' mv '{}' DIR\n\n")),(0,i.kt)("h2",{id:"mount--umount"},"Mount & Umount"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"$ apt install ntfs-3g\n\n## https://gist.github.com/etes/aa76a6e9c80579872e5f\nsudo blkid # find devices\nmkdir /mnt/volume\nsudo chmod 770 /mnt/volume # set permission for mount point\nsudo mount /dev/sda1 /mnt/volume\n\n# Auto mount at boot\nsudo nano /etc/fstab\nUUID=D424912B2491119A /mnt/media FILE_SYSTEM uid=1000,gid=1000,nofail,umask=0 0 0\n")),(0,i.kt)("h2",{id:"rsync"},"rsync"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"# copy with progress bar\nrsync -ah --progress source-file destination-file\n\n# move files\n--remove-source-files\n")),(0,i.kt)("h2",{id:"ssh"},"SSH"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"# create SSH key\nssh-keygen -b 2048 -t rsa\n\n# SSH config\nHost github.com\n  HostName github.com\n  User git\n  IdentityFile ~/.ssh/id_rsa\n\n# disable password auth\n$ sudo nano /etc/ssh/sshd_config\n## change this line\nPasswordAuthentication no\n## restart\n$ sudo /etc/init.d/ssh restart\n\n# port forwarding\nssh -L 5000:targethost:5000 NAME@TUNNEL_HOST\n")),(0,i.kt)("h2",{id:"wget"},"wget"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"# download from file\nwget -i links.txt\n\n# recursive crawl\nwget --recursive --no-parent -w 3 --random-wait -c -i urls.txt\n")),(0,i.kt)("h2",{id:"system"},"System"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"# kill all task containing a name\npkill -9\n\n# see killed processes\ndmesg\n\n# kill all processes\nkillall python3\n\n# check internet speed via terminal\ncurl -s https://raw.githubusercontent.com/sivel/speedtest-cli/master/speedtest.py | python -\n\n# set maximum storage for logs\nhttps://www.digitalocean.com/community/tutorials/how-to-use-journalctl-to-view-and-manipulate-systemd-logs\n\n# disable network interface\nsudo ifconfig wlan0 down\n")))}m.isMDXComponent=!0}}]);