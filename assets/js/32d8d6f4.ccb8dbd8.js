"use strict";(self.webpackChunkonboarding_baania=self.webpackChunkonboarding_baania||[]).push([[212],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=p(n),m=o,f=d["".concat(c,".").concat(m)]||d[m]||s[m]||a;return n?r.createElement(f,i(i({ref:t},u),{},{components:n})):r.createElement(f,i({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5096:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return s}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),i=["components"],l={title:"Jupyter"},c=void 0,p={unversionedId:"docs/data-science/jupyter",id:"docs/data-science/jupyter",title:"Jupyter",description:"Jupyter magic",source:"@site/docs/docs/data-science/jupyter.md",sourceDirName:"docs/data-science",slug:"/docs/data-science/jupyter",permalink:"/docs/data-science/jupyter",draft:!1,editUrl:"https://github.com/baania/onboarding.baania.com/edit/master/docs/docs/data-science/jupyter.md",tags:[],version:"current",frontMatter:{title:"Jupyter"},sidebar:"docs",previous:{title:"GIS",permalink:"/docs/data-science/gis"},next:{title:"PostGIS",permalink:"/docs/data-science/postgis"}},u={},s=[{value:"Jupyter magic",id:"jupyter-magic",level:2},{value:"Set max in-line rows / cols",id:"set-max-in-line-rows--cols",level:3},{value:"Display JSON",id:"display-json",level:3},{value:"Auto refresh module",id:"auto-refresh-module",level:3},{value:"Auto formatting",id:"auto-formatting",level:3},{value:"Autocomplete",id:"autocomplete",level:3},{value:"Load environment variables",id:"load-environment-variables",level:3},{value:"Convert to markdown",id:"convert-to-markdown",level:2}],d={toc:s};function m(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"jupyter-magic"},"Jupyter magic"),(0,a.kt)("h3",{id:"set-max-in-line-rows--cols"},"Set max in-line rows / cols"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'import pandas as pd\n\npd.set_option("display.max_rows", 500)\npd.set_option("display.max_columns", 500)\npd.set_option("display.width", 1000)\n')),(0,a.kt)("h3",{id:"display-json"},"Display JSON"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'from IPython.display import JSON\n\nJSON(\n    {\n        "a": [1, 2, 3, 4],\n        "b": {"inner1": "helloworld", "inner2": "foobar"},\n    }\n)\n')),(0,a.kt)("h3",{id:"auto-refresh-module"},"Auto refresh module"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"%load_ext autoreload\n%autoreload 2\n")),(0,a.kt)("h3",{id:"auto-formatting"},"Auto formatting"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"!pip install nb_black\n\n%load_ext lab_black\n")),(0,a.kt)("h3",{id:"autocomplete"},"Autocomplete"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"!pip install jupyterlab_tabnine\n")),(0,a.kt)("h3",{id:"load-environment-variables"},"Load environment variables"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"!pip install python-dotenv\n\n%load_ext dotenv\n%dotenv\n")),(0,a.kt)("h2",{id:"convert-to-markdown"},"Convert to markdown"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"jupyter nbconvert notebook.ipynb --to markdown\n")))}m.isMDXComponent=!0}}]);